{"version":3,"sources":["App.js","check.js","test.js","age.js","Component/Exam.js","main.js","serviceWorker.js","index.js"],"names":["style","backgroundColor","color","font","border","padding","Radium","prop","onClick","click","check","props","k","m","i","j","console","log","a","test","type","defaultValue","Check","className","name","age","porps","today","Date","birthDate","dob","age_now","getFullYear","getMonth","getDate","onChange","setdob","dayleft","maxdays","mindays","num3","children","main","state","num1","num2","exams","id","showslist","setageHandler","event","dropdt","pickdt","target","value","diff","parseInt","getTime","setState","removeexamHandler","personIndex","newexam","splice","togglelistHandler","doesshow","list","this","map","anyname","index","key","change","getageHandler","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf2d7e60.chunk.js","sourcesContent":["import React  from 'react';\n\nimport Radium from 'radium';\n\nimport './App.css';\nconst style = { \n  backgroundColor: 'green',\n  color : 'white',\n  font: 'inherit',\n  border: '1px solid red',\n  padding: '8px',\n  ':hover' : {\n    backgroundColor : 'lightgreen',\n    color : 'black'\n  }\n \n};\n\n\nconst App =(prop)  => {\n\n\n  \n  return (\n    <div>\n    <h2>exam- i am from main  </h2>\n    <button style={style} onClick={prop.click}>show result</button>           \n    </div>\n  );\n}\n\nexport default Radium(App);\n","\r\n\r\nconst check = (props) =>{\r\n   \r\n    var k=0;\r\n    if(props.m < props.i){\r\n\r\n    \r\n        if(props.i !==0){\r\n    \r\n        for(var i =0; i<=(props.j - props.i); i=i+182.5)\r\n        {\r\n                k++;\r\n                console.log(k);\r\n        }\r\n        }\r\n    \r\n    }\r\n    else {\r\n        if(props.i !==0){\r\n    \r\n            for( i =0; i<=(props.j - props.m); i=i+182.5)\r\n            {\r\n                    k++;\r\n                    console.log(k);\r\n            }\r\n            }\r\n    }\r\n    if(props.a === 2){\r\n    return k;\r\n    }\r\n    else if(props.a === 1){\r\n        return k/2;\r\n        }\r\n    else {\r\n            return k;\r\n            }\r\n\r\n  \r\n    \r\n  \r\n    \r\n}\r\n\r\nexport default check;\r\n\r\n\r\n","import React from 'react';\r\nimport Check from './check';\r\n   \r\n const test = (props) => {\r\n\r\n /* const GetDays = () =>{\r\n  var dropdt = new Date();\r\n  var pickdt =  props.i;                        //new Date(document.getElementById(\"pick_date\").value);\r\n  var diff = ((dropdt - pickdt) / (24 * 3600 * 1000));\r\n  //console.log(parseInt(diff));\r\n  //console.log('test');\r\n  var days = (props.j-((dropdt - pickdt) / (24 * 3600 * 1000)));\r\n // return parseInt(7117-((dropdt - pickdt) / (24 * 3600 * 1000)));\r\n  // return parseInt((dropdt - pickdt) / (24 * 3600 * 1000));\r\n  var k=0;\r\n  for(var i =0; i<=days; i=i+182.5)\r\n  {\r\n          k++;\r\n          console.log(k);\r\n  }\r\n  return k;\r\n // document.getElementById(\"numdays2\").value=k;\r\n}\r\n*/\r\nvar i =  props.i;\r\nvar j =props.j;\r\n\r\n\r\n    return (\r\n      <div>\r\n        \r\n         <Check i={props.i} j={props.j}  m={props.m} a={props.a} />\r\n         <input type=\"text\" defaultValue={() => props.Check(i,j)} className=\"textbox\"  name=\"numdays\"/>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default test\r\n","import React from 'react';\r\n\r\n   const age = (porps) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(porps.dob);\r\n   // var age_now = 0;\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) \r\n    {\r\n        age_now--;\r\n    }\r\n   // console.log(age_now);\r\n  \r\n    return (\r\n        <div>\r\n            \r\n    <h2 > current age: {age_now}</h2>\r\n    \r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default age;\r\n\r\n\r\n","import React from 'react';\r\nimport './Exam.css';\r\nimport Radium from 'radium';\r\n\r\nconst exam = (props) => {\r\n\r\n    const style = { \r\n        backgroundColor: 'green',\r\n        color : 'white',\r\n        font: 'inherit',\r\n        border: '1px solid red',\r\n        padding: '8px',\r\n        ':hover' : {\r\n          backgroundColor : 'lightgreen',\r\n          color : 'black'\r\n        }\r\n       \r\n      };\r\n\r\n     \r\n\r\n    return (\r\n        <div  className=\"component\" >\r\n            <input  type=\"date\" onChange={props.setdob} />\r\n            <h2 >your exam   :{props.name} </h2>\r\n            <h2 >your dob   :{props.dob} </h2>\r\n           \r\n            <h2 >you are    :{props.dayleft} day old </h2>\r\n            <h2 > max days   :{props.maxdays} </h2>\r\n            <h2 > min days   :{props.mindays} </h2>\r\n            <h2 > exam per year   :{props.num3} </h2>\r\n            <h2> { props.children}  </h2>\r\n            <button style={style} onClick={props.click}>Remove this</button>\r\n    \r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default  Radium(exam);","import React, { Component } from 'react';\r\nimport App from './App';\r\n\r\nimport Test  from './test';\r\nimport Age from './age.js';\r\n//import  './component.css';\r\n//import Radium from 'radium';\r\nimport './App.css';\r\nimport Exam from './Component/Exam.js';\r\n\r\nclass main extends Component{\r\n\r\n    state={\r\n        dob:[\r\n         { num1 : 0, num2: 0}\r\n         ],\r\n        exams:[\r\n            {id: '1', name: 'airforce', num3 : 2 , maxdays : 7117 , mindays : 6022},\r\n            {id: '2', name: 'navy' , num3 : 2 , maxdays : 8117 ,mindays : 6022},\r\n            {id: '3', name: 'army' , num3 : 2 , maxdays : 9117 ,mindays : 6022},\r\n            {id: '4', name: 'NDA', num3 : 2 , maxdays : 7117 ,mindays : 6022},\r\n            {id: '5', name: '10+2 Technical Entry' , num3 : 2 , maxdays : 7117 ,mindays : 6022},\r\n            {id: '6', name: 'IMA' , num3 : 2 , maxdays : 8760 ,mindays : 6935},\r\n            {id: '7', name: 'OTA SSC', num3 : 2 , maxdays : 9125 ,mindays : 6935},\r\n            {id: '8', name: 'NCC(SPL)' , num3 : 2 , maxdays : 9125 ,mindays : 6935},\r\n            {id: '10', name: 'JAG MEN' , num3 : 1 , maxdays : 9855 ,mindays : 7665},\r\n            {id: '11', name: 'UNIVERSITY ENTRY SCHEME', num3 : 1 , maxdays : 9125 ,mindays : 6935},\r\n            {id: '12', name: 'TGC(ENGINEERS)' , num3 : 2 , maxdays : 9855 ,mindays : 7300},\r\n            {id: '13', name: 'SS(Tech)' , num3 : 2 , maxdays : 9855 ,mindays : 7300},\r\n            {id: '14', name: 'TGC EDUCATION(AEC)', num3 : 2 , maxdays : 9855 ,mindays : 8395},\r\n            {id: '15', name: 'AFCAT' , num3 : 2 , maxdays : 8395 ,mindays : 6935},\r\n            {id: '16', name: 'GSES' , num3 : 1 , maxdays : 8030 ,mindays : 6935},\r\n            {id: '17', name: 'SSC Submarine Engineering', num3 : 1 , maxdays : 9125 ,mindays : 6935}\r\n           \r\n        ],\r\n        showslist: true\r\n      }\r\n\r\n       \r\n     \r\n     setageHandler = (event ) => {\r\n      var dropdt = new Date();\r\n      var pickdt = new Date(event.target.value) ; \r\n      var diff = parseInt((dropdt.getTime() - pickdt.getTime()) / (24 * 3600 * 1000));\r\n      if(diff !==0){\r\n      console.log(diff);\r\n      }\r\n      const k=diff;\r\n     this.setState( {\r\n            dob:[\r\n              { num1 : event.target.value , num2: k}\r\n              \r\n             ]\r\n             \r\n          });\r\n    }\r\n\r\n      removeexamHandler = (personIndex) => {\r\n          //const person = this.state.persons.slice();\r\n            const newexam =[...this.state.exams];\r\n            newexam.splice(personIndex, 1);\r\n            this.setState({exams: newexam});\r\n      }\r\n     \r\n\r\n      togglelistHandler = () => {\r\n       \r\n        const doesshow =this.state.showslist;\r\n        this.setState({showslist: !doesshow});\r\n     }\r\n     \r\n  \r\n    render(){\r\n \r\n      let list=null;   \r\n      if (this.state.showslist) {\r\n          list = (\r\n        <div>\r\n          {this.state.exams.map( (anyname, index) => {\r\n            return <Exam \r\n            name={anyname.name}\r\n            key={anyname.id}\r\n            setdob={this.setageHandler}\r\n               dob={this.state.dob[0].num1}\r\n              maxdays = {anyname.maxdays}\r\n              mindays = {anyname.mindays}\r\n              num3 = { anyname.num3}\r\n               dayleft = {this.state.dob[0].num2}\r\n            change={this.getageHandler} \r\n             click={ () => this.removeexamHandler(index)}>\r\n\r\n                <Test i={this.state.dob[0].num2} j={anyname.maxdays} m={anyname.mindays} a={anyname.num3}/>\r\n             </Exam>\r\n             \r\n           })}\r\n           \r\n        </div>\r\n              \r\n          );\r\n         // style.backgroundColor=  'red';\r\n         // style[':hover'] = {\r\n           //     backgroundColor : 'lightred',\r\n             //   color : 'black'\r\n             // }\r\n          \r\n      }\r\n\r\n         return(\r\n            <div>\r\n                \r\n               <App click={this.togglelistHandler}/>\r\n               {list}\r\n                <Age dob={this.state.dob[0].num1}/>\r\n              </div> \r\n                );\r\n    }\r\n}\r\n\r\nexport default main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Apptest from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apptest />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}